---
- name: "🌐 Servidor Web INMEDIATO - ¡Funciona YA!"
  hosts: localhost
  gather_facts: yes
  vars:
    puerto: "8080"
    
  tasks:
    - name: "🎯 Información inicial"
      debug:
        msg:
          - "================================"
          - "🚀 SERVIDOR WEB INMEDIATO"
          - "================================"
          - "Se ejecutará durante 60 segundos"
          - "Puerto: {{ puerto }}"
          - "¡Prepárate para el port-forward!"
          - "================================"

    - name: "🌐 Crear y ejecutar servidor web Python"
      shell: |
        python3 -c "
        import http.server
        import socketserver
        import threading
        import time
        from datetime import datetime
        
        PORT = {{ puerto }}
        
        html_content = '''<!DOCTYPE html>
        <html lang=\"es\">
        <head>
            <meta charset=\"UTF-8\">
            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
            <title>🚀 AWX Web Server</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    background: linear-gradient(45deg, #667eea, #764ba2, #f093fb, #f5576c);
                    background-size: 400% 400%;
                    animation: gradientBG 15s ease infinite;
                    margin: 0;
                    padding: 0;
                    min-height: 100vh;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }
                @keyframes gradientBG {
                    0% { background-position: 0% 50%; }
                    25% { background-position: 100% 50%; }
                    50% { background-position: 100% 100%; }
                    75% { background-position: 0% 100%; }
                    100% { background-position: 0% 50%; }
                }
                .container {
                    background: rgba(255,255,255,0.95);
                    padding: 50px;
                    border-radius: 25px;
                    box-shadow: 0 25px 50px rgba(0,0,0,0.3);
                    text-align: center;
                    max-width: 700px;
                    backdrop-filter: blur(10px);
                }
                h1 {
                    color: #333;
                    font-size: 4em;
                    margin-bottom: 20px;
                    animation: bounce 2s infinite;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                @keyframes bounce {
                    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
                    40% { transform: translateY(-30px); }
                    60% { transform: translateY(-15px); }
                }
                .success {
                    background: linear-gradient(45deg, #28a745, #20c997);
                    color: white;
                    padding: 20px;
                    border-radius: 15px;
                    margin: 25px 0;
                    font-size: 1.3em;
                    font-weight: bold;
                    animation: pulse 2s infinite;
                }
                @keyframes pulse {
                    0% { transform: scale(1); }
                    50% { transform: scale(1.05); }
                    100% { transform: scale(1); }
                }
                .info {
                    background: linear-gradient(45deg, #17a2b8, #138496);
                    color: white;
                    padding: 20px;
                    border-radius: 15px;
                    margin: 25px 0;
                    font-size: 1.1em;
                }
                .celebration {
                    font-size: 3em;
                    animation: rotate 3s linear infinite;
                    margin: 20px 0;
                }
                @keyframes rotate {
                    from { transform: rotate(0deg); }
                    to { transform: rotate(360deg); }
                }
                .btn {
                    background: linear-gradient(45deg, #667eea, #764ba2);
                    color: white;
                    padding: 15px 30px;
                    border: none;
                    border-radius: 25px;
                    font-size: 1.2em;
                    cursor: pointer;
                    margin: 15px;
                    transition: all 0.3s;
                    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                }
                .btn:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 10px 25px rgba(0,0,0,0.3);
                }
                .timer {
                    font-size: 2em;
                    color: #dc3545;
                    font-weight: bold;
                    margin: 20px 0;
                    animation: blink 1s infinite;
                }
                @keyframes blink {
                    0%, 50% { opacity: 1; }
                    51%, 100% { opacity: 0.5; }
                }
            </style>
        </head>
        <body>
            <div class=\"container\">
                <h1>🚀 ¡ÉXITO TOTAL!</h1>
                
                <div class=\"success\">
                    ✅ Servidor web ejecutándose desde AWX
                </div>
                
                <div class=\"celebration\">🎉🎊🎈</div>
                
                <div class=\"info\">
                    <strong>🐍 Tecnología:</strong> Python HTTP Server<br>
                    <strong>🌐 Puerto:</strong> {{ puerto }}<br>
                    <strong>📅 Fecha:</strong> ''' + datetime.now().strftime('%Y-%m-%d') + '''<br>
                    <strong>⏰ Hora:</strong> ''' + datetime.now().strftime('%H:%M:%S') + '''<br>
                    <strong>🏗️ Ejecutado por:</strong> Ansible AWX
                </div>
                
                <h2>🎯 ¡Lo conseguimos!</h2>
                <p style=\"font-size: 1.2em; line-height: 1.6;\">
                    Este sitio web está corriendo <strong>EN VIVO</strong> dentro del contenedor AWX 
                    durante la ejecución del playbook de Ansible.
                </p>
                
                <div class=\"timer\" id=\"countdown\">⏱️ Tiempo restante: 60s</div>
                
                <button class=\"btn\" onclick=\"celebrate()\">
                    🎉 ¡CELEBRAR!
                </button>
                
                <button class=\"btn\" onclick=\"showInfo()\">
                    ℹ️ Más Info
                </button>
                
                <div style=\"margin-top: 30px; color: #666; font-size: 0.9em;\">
                    <strong>💡 Tip:</strong> Este servidor se ejecuta durante 60 segundos.<br>
                    ¡Disfruta mientras dura!
                </div>
            </div>

            <script>
                let timeLeft = 60;
                
                function updateTimer() {
                    const timer = document.getElementById('countdown');
                    timer.textContent = '⏱️ Tiempo restante: ' + timeLeft + 's';
                    
                    if (timeLeft <= 10) {
                        timer.style.color = '#dc3545';
                        timer.style.fontSize = '2.5em';
                    }
                    
                    if (timeLeft <= 0) {
                        timer.textContent = '⏰ ¡Tiempo terminado!';
                        timer.style.color = '#6c757d';
                    } else {
                        timeLeft--;
                    }
                }
                
                setInterval(updateTimer, 1000);
                
                function celebrate() {
                    alert('🎉🎉🎉\\n\\n¡FUNCIONA PERFECTAMENTE!\\n\\n🚀 AWX + Ansible + Python\\n💪 ¡Combinación ganadora!\\n\\n🎊 ¡Eres increíble!');
                    
                    // Efecto visual
                    document.body.style.animation = 'none';
                    setTimeout(() => {
                        document.body.style.animation = 'gradientBG 5s ease infinite';
                    }, 100);
                }
                
                function showInfo() {
                    alert('ℹ️ INFORMACIÓN TÉCNICA\\n\\n🐍 Python: http.server\\n🌐 Puerto: {{ puerto }}\\n📦 Contenedor: AWX Task\\n⚙️ Orquestador: Ansible\\n🎯 Estado: FUNCIONANDO\\n\\n¡Todo corriendo en tiempo real!');
                }
                
                // Efectos visuales automáticos
                setInterval(() => {
                    const celebration = document.querySelector('.celebration');
                    celebration.textContent = ['🎉🎊🎈', '🚀💫⭐', '🎯🔥💪', '✨🌟💎'][Math.floor(Math.random() * 4)];
                }, 3000);
            </script>
        </body>
        </html>'''
        
        class CustomHandler(http.server.BaseHTTPRequestHandler):
            def do_GET(self):
                self.send_response(200)
                self.send_header('Content-type', 'text/html')
                self.end_headers()
                self.wfile.write(html_content.encode())
            
            def log_message(self, format, *args):
                print(f'[{datetime.now().strftime(\"%H:%M:%S\")}] {format % args}')
        
        print(f'🚀 Iniciando servidor web en puerto {PORT}...')
        print(f'🌐 Acceso: http://localhost:{PORT}')
        print(f'⏰ Duración: 60 segundos')
        print('=' * 50)
        
        try:
            with socketserver.TCPServer(('', PORT), CustomHandler) as httpd:
                print(f'✅ Servidor ACTIVO en puerto {PORT}')
                print('🔄 Ejecutándose por 60 segundos...')
                
                # Ejecutar por 60 segundos
                start_time = time.time()
                while time.time() - start_time < 60:
                    httpd.handle_request()
                    
                print('⏰ Tiempo terminado - Cerrando servidor')
        except Exception as e:
            print(f'❌ Error: {e}')
        "
      register: servidor_resultado
      async: 0
      poll: 0

    - name: "⏳ Esperar que el servidor esté listo"
      wait_for:
        port: "{{ puerto }}"
        host: "127.0.0.1"
        delay: 2
        timeout: 10

    - name: "🎉 ¡SERVIDOR LISTO!"
      debug:
        msg:
          - "================================"
          - "🌐 SERVIDOR WEB FUNCIONANDO"
          - "================================"
          - "✅ Estado: ACTIVO"
          - "🌐 Puerto: {{ puerto }}"
          - "⏰ Duración: 60 segundos"
          - "================================"
          - "🚀 ACCESO INMEDIATO:"
          - "kubectl port-forward -n awx deployment/awx-local-task {{ puerto }}:{{ puerto }}"
          - "http://localhost:{{ puerto }}"
          - "================================"
          - "⚡ ¡RÁPIDO! Solo tienes 60 segundos"
          - "================================"

    - name: "⏳ Mantener servidor activo por 60 segundos"
      pause:
        seconds: 60
        prompt: |
          🌐 SERVIDOR WEB ACTIVO
          
          ✅ Accede AHORA a: http://localhost:{{ puerto }}
          
          (Ejecuta en otra terminal: kubectl port-forward -n awx deployment/awx-local-task {{ puerto }}:{{ puerto }})
          
          ⏰ El servidor estará activo por 60 segundos...

    - name: "✅ Servidor completado"
      debug:
        msg:
          - "🎯 Servidor web ejecutado exitosamente"
          - "⏰ Duración: 60 segundos"
          - "✅ Misión cumplida" 